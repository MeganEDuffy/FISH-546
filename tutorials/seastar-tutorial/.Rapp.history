source("http://bioconductor.org/biocLite.R")#
biocLite("DESeq2")
# Set the working directory#
setwd("~/Documents/git-repos/FISH-546/tutorials")
data <- read.table("Phel_countdata.txt", header = T, sep = "\t")#
rownames(data) <- data$Feature#
data <- data[,-1]
data <- read.table("Phel_countdata.txt", header = T, sep = "\t")
wd()
data()
getwd()
setwd("/Users/meganduffy/Documents/git-repos/FISH-546")
data <- read.table("Phel_countdata.txt", header = T, sep = "\t")
setwd("/Users/meganduffy/Documents/git-repos/FISH-546/tutorials/seastar-tutorial")
data <- read.table("Phel_countdata.txt", header = T, sep = "\t")
getwd()
data <- read.table("Phel_countdata.txt", header = T, sep = "\t")
data <- read.table("./data/Phel_countdata.txt", header = T, sep = "\t")#
rownames(data) <- data$Feature#
data <- data[,-1]#
dim(data)
deseq2.colData <- data.frame(condition=factor(c(rep("Treated", 3), rep("Control", 3))), type=factor(rep("single-read", 6)))#
rownames(deseq2.colData) <- colnames(data)#
deseq2.dds <- DESeqDataSetFromMatrix(countData = data, colData = deseq2.colData, design = ~ condition)
data <- read.table("Phel_countdata.txt", header = T, sep = "\t")#
rownames(data) <- data$Feature#
data <- data[,-1]
library(DESeq2)
getwd()
data <- read.table("./data/Phel_countdata.txt", header = T, sep = "\t")#
rownames(data) <- data$Feature#
data <- data[,-1]#
dim(data)
deseq2.colData <- data.frame(condition=factor(c(rep("Treated", 3), rep("Control", 3))), type=factor(rep("single-read", 6)))#
rownames(deseq2.colData) <- colnames(data)#
deseq2.dds <- DESeqDataSetFromMatrix(countData = data, colData = deseq2.colData, design = ~ condition)
deseq2.dds <- DESeq(deseq2.dds)#
deseq2.res <- results(deseq2.dds)#
deseq2.res <- deseq2.res[order(rownames(deseq2.res)), ]#
#
head(deseq2.res)
dim(deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ])
tmp <- deseq2.res
plot(tmp$baseMean, tmp$log2FoldChange, pch=19, cex=0.75, ylim=c(-3, 3), log="x", col="darkgray",#
     main="DEG Virus Exposure  (pval <= 0.05)",#
     xlab="mean of normalized counts",#
ylab="Log2 Fold Change")
tmp.sig <- deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ]#
points(tmp.sig$baseMean, tmp.sig$log2FoldChange, pch=20, cex=0.75, col="aquamarine")#
# 2 FC lines#
abline(h=c(-1,1), col="orangered")
tmp.sig <- deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ]#
points(tmp.sig$baseMean, tmp.sig$log2FoldChange, pch=20, cex=0.75, col="cornflowerblue")#
# 2 FC lines#
abline(h=c(-1,1), col="orangered")
plot(tmp$baseMean, tmp$log2FoldChange, pch=19, cex=0.75, ylim=c(-3, 3), log="x", col="lightgray",#
     main="DEG Virus Exposure  (pval <= 0.05)",#
     xlab="mean of normalized counts",#
     ylab="Log2 Fold Change")#
#plotting significant points a different color#
tmp.sig <- deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ]#
points(tmp.sig$baseMean, tmp.sig$log2FoldChange, pch=20, cex=0.75, col="cornflowerblue")#
# 2 FC lines#
abline(h=c(-1,1), col="orangered")
plot(tmp$baseMean, tmp$log2FoldChange, pch=19, cex=0.75, ylim=c(-3, 3), log="x", col="darkslategray3",#
     main="DEG Virus Exposure  (pval <= 0.05)",#
     xlab="mean of normalized counts",#
     ylab="Log2 Fold Change")#
#plotting significant points a different color#
tmp.sig <- deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ]#
points(tmp.sig$baseMean, tmp.sig$log2FoldChange, pch=20, cex=0.75, col="cornflowerblue")#
# 2 FC lines#
abline(h=c(-1,1), col="orangered")
#create tab-delimited table of genes that were differentially expressed#
write.table(tmp.sig, "./data/Phel_DEGlist.tab", row.names = T)
head(tmp.sig)
head(Phel_transcriptome_tab)
head(./Galaxy_Phel_transcriptome.tab)
head(Galaxy_Phel_transcriptome.tab)
head(.data/Galaxy_Phel_transcriptome.tab)
head(".data/Galaxy_Phel_transcriptome.tab")
full_transcriptome <- read.table("./data/Galaxy_Phel_transcriptome.tab") #tab file of full seastar transcriptome#
diffexpressedgenes <- read.table("./data/Phel_DEGlist.tab") #tab file of differentially expressed genes in seastars with wasting disease vs healthy
full_transcriptome <- read.table("./data/alaxy_Phel_transciptome.tab") #tab file of full seastar transcriptome NOTE I SPELLED TRANSCIPTOME WRONG!#
diffexpressedgenes <- read.table("./data/Phel_DEGlist.tab") #tab file of differentially expressed genes in seastars with wasting disease vs healthy
full_transcriptome <- read.table("./data/Galaxy_Phel_transciptome.tab") #tab file of full seastar transcriptome NOTE I SPELLED TRANSCIPTOME WRONG!#
diffexpressedgenes <- read.table("./data/Phel_DEGlist.tab") #tab file of differentially expressed genes in seastars with wasting disease vs healthy
colnames(full_transcriptome) <- c("contig", "sequence") #add column names to full_transcriptome#
head(full_transcriptome) #confirm addition of column names
install.packages("data.table")#
library(data.table)#
setDT(diffexpressedgenes, keep.rownames = TRUE) #convert row names to a separate column in diffexpressedgenes#
colnames(diffexpressedgenes) <- c("contig", "baseMean", "log2FoldChange", "lfcSE", "stat", "pvalue", "padj")#
head(diffexpressedgenes) #confirm addition of column names
Phel_diffexpressed_transcriptome <- merge(x = diffexpressedgenes, y = full_transcriptome, by = "contig") #merge two dataframes together#
#
#Step 9: Remove all columns that are not "contig" and "sequence" (ie. remove "baseMean", "log2FoldChange", "lfcSE", "stat", "pvalue", "padj")#
#
Phel_diffexpressed_transcriptome$baseMean <- NULL#
Phel_diffexpressed_transcriptome$log2FoldChange <- NULL#
Phel_diffexpressed_transcriptome$lfcSE <- NULL#
Phel_diffexpressed_transcriptome$stat <- NULL#
Phel_diffexpressed_transcriptome$pvalue <- NULL#
Phel_diffexpressed_transcriptome$padj <- NULL#
head(Phel_diffexpressed_transcriptome) #confirm column removal
#Step 10: Write out Phel_diffexpressed_transcritpome as a tab file. Need to remove row and column names using "row.names" and "col.names" arguments#
write.table(Phel_diffexpressed_transcriptome, "Phel_diffexpressed_transcriptome.tab", col.names = F, row.names = F)#
?write.table
#Step 10: Write out Phel_diffexpressed_transcritpome as a tab file. Need to remove row and column names using "row.names" and "col.names" arguments#
write.table(Phel_diffexpressed_transcriptome, "./data/Phel_diff_transcriptome.tab", col.names = F, row.names = F)#
?write.table
